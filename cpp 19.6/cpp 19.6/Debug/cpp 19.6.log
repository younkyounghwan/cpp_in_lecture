  main.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(54,14): error C2672: 'invoke': 일치하는 오버로드된 함수가 없습니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(60): message : 컴파일되는 함수 템플릿 인스턴스화 'unsigned int std::thread::_Invoke<_Tuple,0,1,2,3,4,5>(void *) noexcept'에 대한 참조를 확인하세요.
          with
          [
              _Tuple=_Tuple
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(65): message : 컴파일되는 함수 템플릿 인스턴스화 'unsigned int (__stdcall *std::thread::_Get_invoke<_Tuple,0,1,2,3,4,5>(std::integer_sequence<size_t,0,1,2,3,4,5>) noexcept)(void *) noexcept'에 대한 참조를 확인하세요.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(88): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::thread::_Start<void(__cdecl &)(const std::vector<int,std::allocator<int>> &,const std::vector<int,std::allocator<int>> &,unsigned int,unsigned int,std::atomic<unsigned __int64> &),_Ty,_Ty,unsigned int,unsigned int,std::reference_wrapper<unsigned __int64>>(_Fn,_Ty &&,_Ty &&,unsigned int &&,unsigned int &&,std::reference_wrapper<unsigned __int64> &&)'에 대한 참조를 확인하세요.
          with
          [
              _Ty=std::reference_wrapper<std::vector<int,std::allocator<int>>>,
              _Fn=void (__cdecl &)(const std::vector<int,std::allocator<int>> &,const std::vector<int,std::allocator<int>> &,unsigned int,unsigned int,std::atomic<unsigned __int64> &)
          ]
C:\Users\youn7\computer science\cpp\cpp 19.6\cpp 19.6\main.cpp(169): message : 컴파일되는 함수 템플릿 인스턴스화 'std::thread::thread<void(__cdecl &)(const std::vector<int,std::allocator<int>> &,const std::vector<int,std::allocator<int>> &,unsigned int,unsigned int,std::atomic<unsigned __int64> &),std::reference_wrapper<std::vector<int,std::allocator<int>>>,std::reference_wrapper<std::vector<int,std::allocator<int>>>,unsigned int,unsigned int,std::reference_wrapper<unsigned __int64>,0>(_Fn,std::reference_wrapper<std::vector<int,std::allocator<int>>> &&,std::reference_wrapper<std::vector<int,std::allocator<int>>> &&,unsigned int &&,unsigned int &&,std::reference_wrapper<unsigned __int64> &&)'에 대한 참조를 확인하세요.
          with
          [
              _Fn=void (__cdecl &)(const std::vector<int,std::allocator<int>> &,const std::vector<int,std::allocator<int>> &,unsigned int,unsigned int,std::atomic<unsigned __int64> &)
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(50,5): error C2893: 함수 템플릿 'unknown-type std::invoke(_Callable &&,_Ty1 &&,_Types2 &&...) noexcept(<expr>)'을(를) 특수화하지 못했습니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\type_traits(1589): message : 'std::invoke' 선언을 참조하십시오.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(50,5): message : 다음 템플릿 인수 사용:
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(50,5): message : '_Callable=void (__cdecl *)(const std::vector<int,std::allocator<int>> &,const std::vector<int,std::allocator<int>> &,unsigned int,unsigned int,std::atomic<unsigned __int64> &)'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(50,5): message : '_Ty1=std::reference_wrapper<std::vector<int,std::allocator<int>>>'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(50,5): message : '_Types2={std::reference_wrapper<std::vector<int,std::allocator<int>>>, unsigned int, unsigned int, std::reference_wrapper<unsigned __int64>}'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\thread(50,5): error C2780: 'unknown-type std::invoke(_Callable &&) noexcept(<expr>)': 인수가 1개 있어야 하는데 6개를 사용했습니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\type_traits(1583): message : 'std::invoke' 선언을 참조하십시오.
